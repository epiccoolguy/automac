# code: language=ansible

- name: Check if Homebrew is installed
  ansible.builtin.stat:
    path: "{{ homebrew_path }}/bin/brew"
  register: brew_exists

- name: Create temporary directory for Homebrew files
  ansible.builtin.tempfile:
    state: directory
  register: brew_mktempd
  when: not brew_exists.stat.exists

- name: Download latest Homebrew release info
  ansible.builtin.get_url:
    url: https://api.github.com/repos/Homebrew/brew/releases/latest
    dest: "{{ brew_mktempd.path }}/Homebrew.json"
    mode: "0644"
  register: brew_release_info
  when: not brew_exists.stat.exists

- name: Parse Homebrew package download URL
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      grep -o '"browser_download_url":"[^"]*pkg' {{ brew_release_info.dest }} | grep -o '[^"]*$'
    executable: /bin/bash
  register: brew_pkg_url
  changed_when: brew_pkg_url.rc != 0
  when: not brew_exists.stat.exists

- name: Download Homebrew package
  ansible.builtin.get_url:
    url: "{{ brew_pkg_url.stdout }}"
    dest: "{{ brew_mktempd.path }}/Homebrew.pkg"
    mode: "0644"
  register: brew_pkg
  when: not brew_exists.stat.exists

- name: Install Homebrew package
  ansible.builtin.command: installer -pkg "{{ brew_pkg.dest }}" -target /
  become: true
  register: brew_pkg_install
  changed_when: brew_pkg_install.rc != 0
  when: not brew_exists.stat.exists

- name: Remove temporary Homebrew directory
  ansible.builtin.file:
    path: "{{ brew_mktempd.path }}"
    state: absent
  when: brew_mktempd.path is defined

- name: Add Homebrew to shell profile
  ansible.builtin.blockinfile:
    path: "{{ ansible_env.HOME }}/.bash_profile"
    append_newline: true
    prepend_newline: true
    marker: "# {mark} Load Homebrew"
    block: |
      ARCH=$(uname -m)
      if [[ "$ARCH" == "arm64" ]]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
      elif [[ "$ARCH" == "x86_64" ]]; then
        eval "$(/usr/local/Homebrew/bin/brew shellenv)"
      fi
